openapi: 3.0.0
info:
  title: Pharma Dashboard API
  description: API for pharmaceutical company data, financial information, and news articles
  version: 1.0.0
  contact:
    name: API Support
    email: support@pharmadashboard.com
servers:
  - url: /api
    description: Current deployment
paths:
  /companies:
    get:
      summary: Get all companies
      description: Returns a list of all pharmaceutical companies
      operationId: getCompanies
      tags:
        - Companies
      parameters:
        - name: limit
          in: query
          description: Maximum number of companies to return
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Number of companies to skip
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A list of companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'
  /companies/{companyId}:
    get:
      summary: Get company by ID
      description: Returns a single company by ID
      operationId: getCompanyById
      tags:
        - Companies
      parameters:
        - name: companyId
          in: path
          description: ID of the company to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A company object
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Company'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'
  /news:
    get:
      summary: Get news articles
      description: Returns a list of news articles
      operationId: getNews
      tags:
        - News
      parameters:
        - name: company
          in: query
          description: Filter by company
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of articles to return
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Number of articles to skip
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A list of news articles
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NewsArticle'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'
  /financials/{companyId}:
    get:
      summary: Get financial data for a company
      description: Returns financial data for a specific company
      operationId: getFinancials
      tags:
        - Financials
      parameters:
        - name: companyId
          in: path
          description: ID of the company
          required: true
          schema:
            type: string
        - name: period
          in: query
          description: Time period for financial data
          required: false
          schema:
            type: string
            enum: [quarterly, annual, ytd]
            default: quarterly
      responses:
        '200':
          description: Financial data for the company
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FinancialData'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'
  /data-import:
    post:
      summary: Import data
      description: Import data for companies, financials, or news
      operationId: importData
      tags:
        - Data Import
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [companies, financials, news, pipeline]
                  description: Type of data to import
                source:
                  type: string
                  description: Source of the data
                data:
                  type: array
                  items:
                    type: object
                    description: Data to import
              required:
                - type
                - data
      responses:
        '200':
          description: Data imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  importId:
                    type: string
                  recordsProcessed:
                    type: integer
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
  /data-import/status/{importId}:
    get:
      summary: Get import status
      description: Get the status of a data import
      operationId: getImportStatus
      tags:
        - Data Import
      security:
        - BearerAuth: []
      parameters:
        - name: importId
          in: path
          description: ID of the import
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Import status
          content:
            application/json:
              schema:
                type: object
                properties:
                  importId:
                    type: string
                  status:
                    type: string
                    enum: [pending, processing, completed, failed]
                  progress:
                    type: integer
                    minimum: 0
                    maximum: 100
                  recordsProcessed:
                    type: integer
                  recordsFailed:
                    type: integer
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
                  error:
                    type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
  /data-import/schedule:
    post:
      summary: Schedule data import
      description: Schedule a recurring data import
      operationId: scheduleImport
      tags:
        - Data Import
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [companies, financials, news, pipeline]
                  description: Type of data to import
                source:
                  type: string
                  description: Source of the data
                schedule:
                  type: string
                  description: Cron expression for the schedule
                  example: "0 0 * * *"
                config:
                  type: object
                  description: Configuration for the import
              required:
                - type
                - schedule
      responses:
        '200':
          description: Import scheduled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  scheduleId:
                    type: string
                  nextRun:
                    type: string
                    format: date-time
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
  /data-import/schedule/{scheduleId}:
    get:
      summary: Get import schedule
      description: Get details of a scheduled import
      operationId: getImportSchedule
      tags:
        - Data Import
      security:
        - BearerAuth: []
      parameters:
        - name: scheduleId
          in: path
          description: ID of the schedule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Import schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  scheduleId:
                    type: string
                  type:
                    type: string
                  source:
                    type: string
                  schedule:
                    type: string
                  config:
                    type: object
                  nextRun:
                    type: string
                    format: date-time
                  lastRun:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum: [active, paused, deleted]
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete import schedule
      description: Delete a scheduled import
      operationId: deleteImportSchedule
      tags:
        - Data Import
      security:
        - BearerAuth: []
      parameters:
        - name: scheduleId
          in: path
          description: ID of the schedule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Import schedule deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  schemas:
    Company:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ticker:
          type: string
        description:
          type: string
        diseaseAreas:
          type: array
          items:
            type: string
        keyIssues:
          type: array
          items:
            $ref: '#/components/schemas/KeyIssue'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    KeyIssue:
      type: object
      properties:
        title:
          type: string
        trend:
          type: string
          enum: [positive, negative, neutral]
        impact:
          type: string
          enum: [high, medium, low]
        newsImpact:
          type: string
    NewsArticle:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        source:
          type: string
        date:
          type: string
          format: date-time
        snippet:
          type: string
        url:
          type: string
        sentiment:
          type: string
          enum: [positive, negative, neutral]
        category:
          type: string
        companies:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    FinancialData:
      type: object
      properties:
        companyId:
          type: string
        period:
          type: string
        currentPrice:
          type: string
        ytdReturn:
          type: string
        marketCap:
          type: string
        peRatio:
          type: string
        dividendYield:
          type: string
        quarterlyData:
          type: array
          items:
            $ref: '#/components/schemas/FinancialPeriod'
        annualData:
          type: array
          items:
            $ref: '#/components/schemas/FinancialPeriod'
    FinancialPeriod:
      type: object
      properties:
        period:
          type: string
        revenue:
          type: number
        netIncome:
          type: number
        eps:
          type: number
        freeCashFlow:
          type: number
    PaginationMeta:
      type: object
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        pages:
          type: integer
    Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: string
        details:
          type: object
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication is required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Not authorized to perform the operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
